# -*- coding: utf-8 -*-
"""Day 6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MooLcVqhXsJ9zcPKugodeATg2gYtjogT
"""

#Function
#def - define function
#my_function() -  name of the function

#example
#def my_function():
# Do this
# Then do this
# Finally do this

def my_function():
  print("Hello")
  print("Bye")

my_function()

#while loop

# For Vs Loop
# for iten in list_of_items:
#   Do something to each item

# while something_is_true: when this line became false this loop will stop
#   Do something repeatedly

#Example
# number_of_hurdles = 6
# while number_of_hurdles > 0:
#   jump()
#   number_of_hurdles -=1
#   print(number_of_hurdles)

#for loop are good for iterating things for each
#while loop are good for continue thing while the condition are true

# Reeborg's world code
# Reeborg's world code hurdle 1
# def turn_right():
#     turn_left()
#     turn_left()
#     turn_left()

# def path():
#     move()
#     turn_left()
#     move()
#     turn_right()
#     move()
#     turn_right()
#     move()
#     turn_left()

# while at_goal() != True:
#     path()

# Reeborg's world code hurdle 2
# def turn_right():
#     turn_left()
#     turn_left()
#     turn_left()

# def jump():
#     turn_left()
#     move()
#     turn_right()
#     move()
#     turn_right()
#     move()
#     turn_left()



# while at_goal() != True:
#     if wall_in_front() == True:
#         jump()
#     else:
#         move()


# while at_goal() != True:
#     if front_is_clear() == True:
#         move()
#     else:
#         jump()

# Reeborg's world code hurdle 4
# def turn_right():
#     turn_left()
#     turn_left()
#     turn_left()

# def jump():
#     turn_left()
#     move()
#     turn_right()

# def landing():
#     turn_right()
#     move()
#     turn_left()

# while at_goal() != True:
#     if front_is_clear() != True:
#         while wall_in_front() == True:
#             jump()
#     elif right_is_clear() == True:
#         move()
#         while right_is_clear() == True:
#             landing()
#     else:
#         move()

# Reeborg's world code hurdle 3
# def turn_right():
#     turn_left()
#     turn_left()
#     turn_left()

# def jump():
#     turn_left()
#     move()
#     turn_right()
#     if wall_on_right() == True:
#         turn_left()
#         move()
#         turn_right()
#     else:
#         move()
#         turn_right()
#         move()
#         turn_left()

# while at_goal() != True:
#     if front_is_clear() != True:
#         jump()
#     elif front_is_clear() == True:
#         move()

# Reeborg's world code Escaping The Maze
# def turn_right():
#     turn_left()
#     turn_left()
#     turn_left()

# while front_is_clear():
#     move()
# turn_left()

# while not at_goal():
#     if right_is_clear():
#         turn_right()
#         move()
#     elif front_is_clear():
#         move()
#     else:
#         turn_left()